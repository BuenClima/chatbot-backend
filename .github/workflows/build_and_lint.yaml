name: üõ†Ô∏è Python Build, Lint, and Coverage Workflow

on:
  pull_request:
    branches:
      - main

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v2

      - name: üêç Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Create Environment File
        run: echo "
          DATABASE_URL=postgresql://test:test@postgres/test
          JWT_SECRET=test-token
          ALGORITHM=HS256
          ACCESS_TOKEN_EXPIRE_MINUTES=1"

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pytest pytest-cov  # Install pytest-cov for coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: üö® Run Linter (Pylint)
        run: |
          pylint app --exit-zero

      - name: üß™ Run Tests with Coverage and Generate Report
        id: run_tests_with_coverage
        run: |
          pytest --cov=. --cov-report=term > coverage-summary.txt || true  # Run tests and coverage, save summary to a file

      - name: Post Coverage Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('coverage-summary.txt', 'utf8');
            const comment = `
            ## üõ°Ô∏è Test Coverage Report
            \`\`\`
            ${summary}
            \`\`\`
            `;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
